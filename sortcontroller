package com.FoodSort.springbootFoodSort.controller;

import com.FoodSort.springbootFoodSort.entity.Food;
import com.FoodSort.springbootFoodSort.service.FoodService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;


@Controller
public class FoodController {

    @Autowired
    private FoodService foodService;

    // display list of foods
    @GetMapping("/")
    public String viewHomePage(Model model) {
        return findPaginated(1, "name", "asc", model);
    }

//    @GetMapping("/showNewFoodForm")
//    public String showNewFoodForm(Model model) {
//        // create model attribute to bind form data
//        Food food = new Food();
//        model.addAttribute("food", food);
//        return "new_Food";
//    }

//    @PostMapping("/saveFood")
//    public String saveFood(@ModelAttribute("foods") Food food) {
//        // save food to database
//        foodService.saveFoods(food);
//        return "redirect:/";
//    }

//    @GetMapping("/showFormForUpdate/{id}")
//    public String showFormForUpdate(@PathVariable(value = "id") long id, Model model) {
//
//        // get food from the service
//        Food food = foodService.getFoodsById(id);
//
//        // set food as a model attribute to pre-populate the form
//        model.addAttribute("foods", food);
//        return "update_foods";
//    }

//    @GetMapping("/deleteFood/{id}")
//    public String deleteFood(@PathVariable(value = "id") long id) {
//
//        // call delete food method
//        this.foodService.deleteFoodsById(id);
//        return "redirect:/";
//    }


    @GetMapping("/page/{pageNo}")
    public String findPaginated(@PathVariable(value = "pageNo") int pageNo,
                                @RequestParam("sortField") String sortField,
                                @RequestParam("sortDir") String sortDir,
                                Model model) {
        int pageSize = 5;

        Page<Food> page = foodService.findPaginated(pageNo, pageSize, sortField, sortDir);
        List<Food> listFoods = page.getContent();

        model.addAttribute("currentPage", pageNo);
        model.addAttribute("totalPages", page.getTotalPages());
        model.addAttribute("totalItems", page.getTotalElements());

        model.addAttribute("sortField", sortField);
        model.addAttribute("sortDir", sortDir);
        model.addAttribute("reverseSortDir", sortDir.equals("asc") ? "desc" : "asc");

        model.addAttribute("listFoods", listFoods);
//        return "indexss";

return "/fridge/fridgeFood/fridgeFood";

    }

}
